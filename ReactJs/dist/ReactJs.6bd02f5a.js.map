{"mappings":"AAaA,MAAM,SAAS,MAAM,aAAa,CAAC,OAAO;IAAE,IAAI;AAAS,GAAG;IAC1D,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;IACD,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;CACF;AAED,MAAM,UAAU,MAAM,aAAa,CACjC,MACA;IAAE,IAAI;IAAW,KAAK;AAAM,GAC5B;AAGF,QAAQ,GAAG,CAAC,sBAAsB,UAAU,gBAAgB;AAE5D,kNAAkN;AAClN,yDAAyD;AAEzD,aAAa;AACb,+DAA+D;AAC/D,oDAAoD;AACpD,+DAA+D;AAE/D,yIAAyI;AAEzI,6IAA6I;AAE7I,MAAM,OAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AACzD,yDAAyD;AACzD,wBAAwB;AACxB,KAAK,MAAM,CAAC","sources":["App.js"],"sourcesContent":["{\r\n  /* <div id=\"parent\">\r\n  <div id=\"child1\">\r\n    <h1>I am an h1 tag.</h1>\r\n     <h2>I am an h2 tag.</h2>\r\n  </div>\r\n   <div id=\"child2\">\r\n    <h1>I am an h1 tag.</h1>\r\n     <h2>I am an h2 tag.</h2>\r\n  </div>\r\n</div>; */\r\n}\r\n\r\nconst parent = React.createElement(\"div\", { id: \"parent\" }, [\r\n  React.createElement(\"div\", { id: \"child1\" }, [\r\n    React.createElement(\"h1\", {}, \"I am an h1 tag.\"),\r\n    React.createElement(\"h2\", {}, \"I am an h2 tag.\"),\r\n  ]),\r\n  React.createElement(\"div\", { id: \"child2\" }, [\r\n    React.createElement(\"h1\", {}, \"I am an h1 tag.\"),\r\n    React.createElement(\"h2\", {}, \"I am an h2 tag.\"),\r\n  ]),\r\n]);\r\n\r\nconst heading = React.createElement(\r\n  \"h1\",\r\n  { id: \"heading\", xyz: \"abc\" },\r\n  \"Hello World From React\"\r\n);\r\n\r\nconsole.log(\"Heading by React: \", heading); // return object\r\n\r\n// React.createElement() is a function provided by the React library that creates and returns a React element. A React element is a plain JavaScript object that describes what you want to display on the screen.\r\n// Syntax - React.createElement(type, props, ...children)\r\n\r\n// Parameters\r\n// type: The type of the element you want to create. It can be:\r\n// A string (e.g., 'div', 'span') for HTML elements.\r\n// A React component (e.g., MyComponent) for custom components.\r\n\r\n// props: An object containing the attributes or properties for the element (e.g., className, id, etc.). Pass null if there are no props.\r\n\r\n// ...children: The child elements or content inside the element. These can be strings, numbers, other React elements, or arrays of elements.\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n// console.log(\"Root by React: \", root); // return object\r\n// root.render(heading);\r\nroot.render(parent);\r\n"],"names":[],"version":3,"file":"ReactJs.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}